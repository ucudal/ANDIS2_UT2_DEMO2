services:
  # api-gateway:
  #   build: ./api-gateway
  #   image: nginx:1.25-alpine
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./api-gateway/ngixconf/ngix.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - users-service
  #     - products-service
  #     - orders-service

  orders-db:
    # build: ./orders-service
    image: mysql:9.3
    env_file:
      - ./orders-service/.env
    ports:
      - "3306:3306"
    volumes:
      - ./orders-service/mysqldata:/var/lib/mysql
      - ./orders-service/mysqlinit:/docker-entrypoint-initdb.d

  # orders-service:
  #   build: ./orders-service
  #   image: orders-service:latest
  #   env_file:
  #     - ./orders-service/.env
  #   environment:
  #     MYSQL_HOST: "orders-db"
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - orders-db

  products-db:
    # build: ./products-service
    image: mongo:7
    ports:
      - "27017:27017"
    volumes:
      - ./products-service/mongodbdata:/data/db
      - ./products-service/mongoinit:/docker-entrypoint-initdb.d
    env_file:
      - ./products-service/.env

  # products-service:
  #   build: ./products-service
  #   image: products-service:latest
  #   env_file:
  #     - ./products-service/.env
  #   environment:
  #     MONGO_HOST: "products-db"
  #   ports:
  #     - "8001:8000"
  #   depends_on:
  #     - products-db

  users-db:
    # build: ./users-service
    image: postgres:17
    env_file:
      - ./users-service/.env
    ports:
      - "5432:5432"
    volumes:
      - ./users-service/pgdata:/var/lib/postgresql/data
      - ./users-service/pginit:/docker-entrypoint-initdb.d

  # users-service:
  #   build: ./users-service
  #   image: users-service:latest
  #   env_file:
  #     - ./users-service/.env
  #   environment:
  #     POSTGRES_HOST: "users-db"
  #   ports:
  #     - "8002:8000"
  #   depends_on:
  #     - users-db
